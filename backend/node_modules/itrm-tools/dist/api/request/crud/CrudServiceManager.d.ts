import { AxiosRequestConfig } from "axios";
import { CrudManager } from "./CrudManager";
export interface StandardIdRequestDefinition {
    id: number;
    config?: AxiosRequestConfig;
}
export declare abstract class CrudServiceManager<D, I> implements CrudManager<StandardIdRequestDefinition, D, I> {
    findOrCreate(details: D): Promise<I | undefined>;
    protected extractItem(response: any, key: string): any;
    protected extractItems(response: any, key: string): any[];
    protected sendFinding(url: string, config?: AxiosRequestConfig): Promise<I | undefined>;
    protected sendAllFinding(url: string, config?: AxiosRequestConfig): Promise<I[] | undefined>;
    protected sendCreation(url: string, body: any, config?: AxiosRequestConfig): Promise<I | undefined>;
    protected sendModification(url: string, modification: I, config?: AxiosRequestConfig): Promise<any>;
    protected sendDestuction(url: string, config?: AxiosRequestConfig): Promise<any>;
    abstract find(details: D): Promise<I | undefined>;
    abstract findAll(details: D): Promise<I[] | undefined>;
    abstract findById(id: StandardIdRequestDefinition): Promise<I | undefined>;
    abstract create(details: D): Promise<I | undefined>;
    abstract modify(item: I): Promise<any>;
    abstract destroy(item: I): Promise<any>;
}
